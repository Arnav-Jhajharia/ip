plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    // JUnit (unchanged)
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly   'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    String javaFxVersion = '17.0.7'

    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'
}


application {
    // IMPORTANT: point to a tiny bootstrap (Launcher) that calls Application.launch(...)
    mainClass = 'com.arnavjhajharia.penguin.app.Launcher'
    // Enable JVM assertions only for the model package (and subpackages)
    applicationDefaultJvmArgs = ['-ea:com.arnavjhajharia.penguin.model...']
}

// You can keep Shadow, but GUI fat-jars can be tricky.
// Prefer Gradleâ€™s run/distribution for JavaFX. If you keep it:


test {
    useJUnitPlatform()
    // Disable Gradle's default global assertions; enable selectively via jvmArgs below
    enableAssertions = false
    // Enable JVM assertions only for the model package during tests
    jvmArgs '-ea:com.arnavjhajharia.penguin.model...'
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

// Not needed for GUI, but harmless to keep
run {
    standardInput = System.in
    // Enable JVM assertions only for the model package during 'gradle run'
    jvmArgs '-ea:com.arnavjhajharia.penguin.model...'
}

// Add Main-Class to the JAR manifest so `java -jar` works
jar {
    manifest {
        attributes 'Main-Class': application.mainClass.get()
    }
}
